
2024/05/31 Added LiteracyReview
           The file introduced the possibile classification technique, Vector Machine (SVM), Random Forest (RF), Naive Bayes (NB), and Artificial Neural Networks (ANN) in phishing email detection, summarizing their strengths and challenges.
           ---Yihan Jiao
2024/5/31 Added LiteracyReview
          This week, Guoyu Zhang studied supervised and unsupervised machine learning algorithms. Supervised learning algorithms are trained on labeled data and include techniques such as Artificial Neural Networks (ANN), 
          Naïve Bayes, and Decision Trees. Unsupervised learning algorithms do not require labeled data and are used to identify patterns and structures in data, with common algorithms including K-Nearest Neighbors (KNN) and K-Means Clustering.
          ---Guoyu Zhang V01047027

2024/06/06 Added  Bayes PhishingEmail.py
           This file is using the Naive Bayes classifier for phishing email detection to load and preprocess the data andsplit the dataset.
            --- Yi Lu V00901547
2024/06/09 Data Processing
		1.Load dataset. 2.Fill missing values. 3. Clean text (remove HTML tags, URLs, special characters, digits, convert to lowercase, remove stop words). 
                4. Combine cleaned ‘Subject’ and ‘Body’ text.
            Feature Extraction
		1. Initialize TF-IDF Vectorizer (limit to 500 features). 2. Transform cleaned text to TF-IDF matrix. 3. Convert TF-IDF matrix to DataFrame. 
                4. Save TF-IDF features to CSV.
            ------- Guoyu Zhang V01047027
2024/06/09 Added Yihan-Jiao/preprocess_N_gram.py
	   Preprocesses phishing email subject and body text by removing unwanted characters, URLs, and stop words, 
	   and then combines them into a single cleaned text column. It then extracts N-gram features (1-grams, 2-grams, and 3-grams) from the cleaned text, 
	   converts the features into a DataFrame, and saves the resulting N-gram feature matrix to a CSV file.
	   --- Yihan Jiao V01045917
2024/06/09 Uploaded a CSV file 
	   can be used for further analysis, such as text classification or clustering, 
	   by utilizing the N-gram features to understand patterns and relationships in the email content.
	   This detailed representation allows for advanced text analysis and can be used in various natural language processing tasks, 
	   such as text classification, sentiment analysis, and topic modeling.
	   --- Yihan Jiao V01045917
2024/06/13 Added  BoW.py
           This file is to load dataset, fill missing values, clean text and feature extraction.
            --- Yi Lu V00901547
2024/06/16 Added Yihan-Jiao/preprocess_email.py
	   This file done the preprocess part of the normal emails.Removing unwanted characters, URLs, and stop words, 
	   and then combines them into a single cleaned text column. It then extracts N-gram features (1-grams, 2-grams, and 3-grams) from the cleaned text, 
	   converts the features into a DataFrame, and saves the resulting N-gram feature matrix to a CSV file.
	   ---Yihan Jiao V01045917
2024/06/16 Added Yihan-Jiao/combine.ipynb
	   This file  combine the two data sets together to form a unified data set that contains all messages.
	   Load the processed phishing and normal mail datasets into a data box and add a label column (for example, 1 for phishing and 0 for normal mail)
	   ---Yihan Jiao V01045917
2024/06/16 Added Yihan-Jiao/logistic_regression.ipynb
	   Load and divide the data set;Train logistic regression models;Predict and evaluation models;Use joblib to save the trained model to a file for later use.
	   ---Yihan Jiao V01045917
2024/06/19 Added Guoyu zhang/TF-IDF_SVM.ipynb
          Uses an SVM model to extract features, train, classify, and evaluate phishing and normal emails.
          ---Guoyu Zhang V01047027
2024/06/20 Added Guoyu zhang/TF-IDF MODELTRAINING.ipynb
         This code preprocesses phishing and normal email datasets, extracts features using TF-IDF, 
         trains a Naive Bayes classifier to distinguish between phishing and normal emails, evaluates the model’s performance, 
         ---Guoyu Zhang V01047027
2024/06/26 Added  BoW.ipynb
           This file is to text feature extraction, model training, to model evaluation with Logistic Regression. It provides a machine learning approach for text classification.
            --- Yi Lu V00901547
2024/06/27 Added Yihan-Jiao/random_forest.py
	Load and divide the data set;Train random forest models;Predict and evaluation models;Use joblib to save the trained model to a file for later use.
	 ---Yihan Jiao V01045917
2024/06/30 Added K-Nearest.ipynb,Logistic Regression.ipynb,tf_idf random forest.ipynb
        Today, I completed the implementation and addition of three machine learning models for phishing email classification: K-Nearest.ipynb for K-Nearest Neighbors, 
        Logistic_Regression.ipynb for Logistic Regression, and tf_idf_random_forest.ipynb for Random Forest. These notebooks include data preprocessing, 
        TF-IDF feature extraction, model training, and evaluation.
        --Guoyu Zhang v01047027
2024/07/03 Added knn.ipynb, svm.ipynb
	Completed all four algorithms by n-grams feature extraction.
	The n-grams feature extraction includes logistic regression, SVM, KNN and random forest alogorithms. These notebook include data preprocession,
	feature extraction, model training and evaluation.
	---Yihan Jiao V01045917
2024/07/04 Added Naive_Bayes.ipynb
	Train a Naive Bayes model, evaluate its performance and plot confusion matrix.
        --- Yi Lu V00901547
